{% set version = environ.get('PETSC_VERSION', '3.21.5') %}

{% set cuda_target_name = "x86_64-linux" %}
{% set cuda_version = environ.get("PETSC_CUDA_VERSION", "12.2") %}

{% if cuda_version == "None" %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("PETSC_CUDA_VERSION", "12.2").split(".")[0] | int %}
{% endif %}

package:
  name: petsc
  version: '{{ version }}_derecho'

source:
  url: https://web.cels.anl.gov/projects/petsc/download/release-snapshots/petsc-{{ version }}.tar.gz

build:
  number: 1000 # high priortity over other matches at same version
  string: {{ environ.get('NCAR_BUILD_ENV').replace('derecho-','').replace('-','.') }}_{{ PKG_BUILDNUM }} # [cuda_version == "None"]
  string: {{ environ.get('NCAR_BUILD_ENV').replace('derecho-','').replace('-','.') }}_cuda{{ cuda_major }}_{{ PKG_BUILDNUM }} # [cuda_version != "None"]

  script_env:
    - PETSC_CUDA_VERSION={{ cuda_version }}
  #   - CUDA_CONDA_TARGET_NAME={{ cuda_target_name }}

  # we're really abusing conda-build here.  This package will only work
  # on Derecho with cray-mpich - therefore it will have many dependent
  # shared libraries outside the conda-build source tree.  That's OK,
  # if distasteful.  Allow it.
  host_runpath_whitelist:
    - '/opt/cray/*'
    - '/glade/u/apps/*'
  missing_dso_whitelist:
    - '*/libcublas.so.*'
    - '*/libcublasLt.so.*'
    - '*/libcuda*.so.*'
    - '*/libcufft.so.*'
    - '*/libcupti.so.*'
    - '*/libcurand.so.*'
    - '*/libcusolver.so.*'
    - '*/libcusparse.so.*'
    - '*/libfabric.so.*'
    - '*/libmpi_*.so*'
    - '*/libpals.so.*'
    - '*/libpmi*.so.*'
    - '*/libpthread.so.*'
    - '/lib64/ld-linux-x86-64.so.*'
    - '/lib64/libc.so.*'
    - '/lib64/libdl.so.*'
    - '/lib64/libgcc_s.so.*'
    - '/lib64/libm.so.*'
    - '/lib64/librt.so.*'
    - '/lib64/libutil.so.*'
    - '/usr/lib64/libgomp.so.*'
    - '/usr/lib64/libnuma.so.*'
    - '/usr/lib64/libstdc++.so.*'

requirements:
  build:
    - make
    - cmake
    - pkg-config
    - python
    - gnuconfig
  run:
    - python

test:
  requires:
    - pkg-config
  commands:
    - pkg-config --validate PETSc
    - pkg-config --cflags PETSc
    - pkg-config --libs PETSc

about:
  home: https://www.mcs.anl.gov/petsc/
  summary: 'PETSc: Portable, Extensible Toolkit for Scientific Computation'
  license: BSD-2-Clause
  license_file: LICENSE
  license_family: BSD
  dev_url: https://gitlab.com/petsc/petsc
  doc_url: https://petsc.org/release/docs/manual/
