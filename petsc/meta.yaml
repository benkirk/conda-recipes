{% set version = environ.get('PETSC_VERSION', '3.21.5') %}
{% set build = 1000 %}

# {% set mpi = mpi or 'mpich' %}
# {% if scalar == "real" %}
# {% set build = build + 100 %}
# {% endif %}

{% set cuda_target_name = "x86_64-linux" %}  # [linux64]
# {% set cuda_target_name = "ppc64le-linux" %}  # [ppc64le]
# {% set cuda_target_name = "sbsa-linux" %}  # [aarch64]
# {% set cuda_target_name = "" %}  # [osx or win]

{% set cuda_compiler_version = environ.get("cuda_compiler_version", "12.2") %}

{% if cuda_compiler_version == "None" %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "12.2").split(".")[0] | int %}
{% endif %}

package:
  name: petsc
  version: '{{ version }}_derecho'

source:
  url: https://web.cels.anl.gov/projects/petsc/download/release-snapshots/petsc-{{ version }}.tar.gz

build:
  number: 1000 # high priortity over other matches at same version
  string: {{ environ.get('NCAR_BUILD_ENV').replace('derecho-','').replace('-','.') }}_{{ PKG_BUILDNUM }} # [cuda_compiler_version == "None"]
  string: {{ environ.get('NCAR_BUILD_ENV').replace('derecho-','').replace('-','.') }}_cuda_{{ cuda_major }}_{{ PKG_BUILDNUM }} # [cuda_compiler_version != "None"]
  #number: {{ build }}
  #string: {{ scalar }}_h{{ PKG_HASH }}_{{ build }}  # [cuda_compiler_version == "None"]
  #string: cuda{{ cuda_major }}_{{ scalar }}_h{{ PKG_HASH }}_{{ build }}  # [cuda_compiler_version != "None"]
  script_env:
    - PETSC_CUDA_VERSION={{ cuda_compiler_version }}
  #   - CUDA_CONDA_TARGET_NAME={{ cuda_target_name }}


  # we're really abusing conda-build here.  This package will only work
  # on Derecho with cray-mpich - therefore it will have many dependent
  # shared libraries outside the conda-build source tree.  That's OK,
  # if distasteful.  Allow it.
  host_runpath_whitelist:
    - '/opt/cray/*'
    - '/glade/u/apps/*'
  missing_dso_whitelist:
    - '*/libcublas.so.*'
    - '*/libcublasLt.so.*'
    - '*/libcuda*.so.*'
    - '*/libcudnn.so.*'
    - '*/libcufft.so.*'
    - '*/libcupti.so.*'
    - '*/libcurand.so.*'
    - '*/libcusolver.so.*'
    - '*/libcusparse.so.*'
    - '*/libfabric.so.*'
    - '*/libmpi_*.so*'
    - '*/libpals.so.*'
    - '*/libpmi*.so.*'
    - '*/libpthread.so.0'
    - '/lib64/ld-linux-x86-64.so.2'
    - '/lib64/libc.so.6'
    - '/lib64/libdl.so.2'
    - '/lib64/libgcc_s.so.1'
    - '/lib64/libm.so.6'
    - '/lib64/librt.so.1'
    - '/lib64/libutil.so.1'
    - '/usr/lib64/libgomp.so.1'
    - '/usr/lib64/libnuma.so.1'
    - '/usr/lib64/libstdc++.so.6'

  # run_exports:
  #   - {{ pin_subpackage('petsc', max_pin='x.x') }}
  #   - petsc * {{ scalar }}_*                       # [cuda_compiler_version == "None"]
  #   - petsc * cuda{{ cuda_major }}_{{ scalar }}_*  # [cuda_compiler_version != "None"]
  # track_features:
  #   - petsc_complex  # [scalar == "complex"]
  #   - petsc_cuda  # [cuda_compiler_version != "None"]
  # # Allow using 11.2 with 11.8 or 12.x with 12.4
  # ignore_run_exports_from:
  #   - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
  #   - cudatoolkit             # [(cuda_compiler_version or "").startswith("11")]
  #   {% if cuda_major >= 12 %}
  #   - cuda-cudart-dev
  #   - cuda-nvtx-dev
  #   - libcublas-dev
  #   - libcufft-dev
  #   - libcurand-dev
  #   - libcusolver-dev
  #   - libcusparse-dev
  #   {% endif %}

requirements:
  build:
    - make
    - cmake
    - pkg-config
    - python
    - gnuconfig
    # - libblas
    # - libcblas
    # - liblapack
    # - cmake
    # - yaml
    # - hypre
    # - metis
    # - parmetis
    # - libptscotch
    # - scalapack
    # - superlu
    # - superlu_dist
    # - libscotch
    # - mumps-mpi
    # - suitesparse
    # - hdf5
    # - hdf5 * mpi_{{ mpi }}_*
    # - fftw * mpi_{{ mpi }}_*
    # - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
    # - cudatoolkit                               # [(cuda_compiler_version or "").startswith("11")]
    # {% if cuda_major >= 12 %}
    # - cuda-cudart-dev
    # - cuda-nvtx-dev
    # - libcublas-dev
    # - libcufft-dev
    # - libcurand-dev
    # - libcusolver-dev
    # - libcusparse-dev
    # {% endif %}
  run:
    - python
    # - {{ mpi }}
    # - yaml
    # - hypre
    # - metis
    # - parmetis
    # - libptscotch
    # - scalapack
    # - superlu
    # - superlu_dist
    # - libscotch
    # - mumps-mpi
    # - suitesparse
    # - hdf5
    # - hdf5 * mpi_{{ mpi }}_*
    # - fftw * mpi_{{ mpi }}_*
    # - cuda-version >={{ cuda_major }}.2,<{{ cuda_major+1 }}  # [(cuda_compiler_version or "").startswith("11")]
    # - cudatoolkit >={{ cuda_major }}.2,<{{ cuda_major+1 }}   # [(cuda_compiler_version or "").startswith("11")]
    # {% if cuda_major >= 12 %}
    # - cuda-version >={{ cuda_major }}.0,<{{ cuda_major+1 }}
    # - cuda-cudart
    # - cuda-nvtx
    # - libcublas
    # - libcufft
    # - libcurand
    # - libcusolver
    # - libcusparse
    # - {{ pin_compatible('cuda-nvtx', min_pin='x', max_pin='x') }}
    # - {{ pin_compatible('cuda-cudart', min_pin='x', max_pin='x') }}
    # - {{ pin_compatible('libcublas', min_pin='x', max_pin='x') }}
    # - {{ pin_compatible('libcufft', min_pin='x', max_pin='x') }}
    # - {{ pin_compatible('libcurand', min_pin='x', max_pin='x') }}
    # - {{ pin_compatible('libcusolver', min_pin='x', max_pin='x') }}
    # - {{ pin_compatible('libcusparse', min_pin='x', max_pin='x') }}
    # {% endif %}

# test:
#   requires:
#     - pkg-config
#     - make
#     - {{ compiler('c') }}
#     - {{ compiler('cxx') }}
#     - {{ compiler('fortran') }}
#   files:
#     - tests/ex1.c
#     - tests/ex1f.F90
#     - tests/testdlopen.c
#     - tests/makefile
#   commands:
#     - pkg-config --validate PETSc
#     - pkg-config --cflags PETSc
#     - pkg-config --libs PETSc

about:
  home: https://www.mcs.anl.gov/petsc/
  summary: 'PETSc: Portable, Extensible Toolkit for Scientific Computation'
  license: BSD-2-Clause
  #license_file: LICENSE
  license_family: BSD
  dev_url: https://gitlab.com/petsc/petsc
  doc_url: https://petsc.org/release/docs/manual/
